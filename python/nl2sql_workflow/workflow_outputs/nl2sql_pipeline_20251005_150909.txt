================================================================================
🔍 NL2SQL PIPELINE ANALYSIS REPORT
================================================================================

📋 PIPELINE STAGES:
   1. 🎯 Intent Analysis
   2. 📊 Schema Mapping
   3. 💻 SQL Generation
   4. ✅ Validation
   5. 🔧 Execution
   6. 📝 Results Formatting
================================================================================

────────────────────────────────────────────────────────────────────────────────
💬 STAGE 1: USER QUESTION
────────────────────────────────────────────────────────────────────────────────

show me all tables in the DB, and their purpose

────────────────────────────────────────────────────────────────────────────────
🎯 STAGE 2: INTENT ANALYZER
────────────────────────────────────────────────────────────────────────────────

- Primary intent: SELECT metadata about database structure (database introspection).
- Entities mentioned: Tables in the database; their "purpose" (usually table descriptions or comments).
- Conditions/filters requested: None—all tables in the database.
- Required aggregations or calculations: None.
- Expected output format: List of all table names along with a description or purpose for each (e.g., two columns: table_name and table_description/purpose).

────────────────────────────────────────────────────────────────────────────────
📊 STAGE 3: SCHEMA EXPERT
────────────────────────────────────────────────────────────────────────────────

Schema Mapping for your Request:
1. **Relevant Tables Needed**: To show all tables, query system catalog views (`INFORMATION_SCHEMA.TABLES` or `sys.tables`). No application tables are directly involved.
2. **Specific Columns to Query**: For `INFORMATION_SCHEMA.TABLES`, use `TABLE_NAME`, `TABLE_SCHEMA`, `TABLE_TYPE`. For purpose/description, the schema does not have built-in descriptions—manual annotation is needed.
3. **JOIN Relationships Required**: None—system views alone list all tables.
4. **Indexes that Could Help Performance**: System views are inherently indexed for metadata queries.
5. **Potential Schema Limitations**: Table "purpose" (descriptions) are NOT stored natively in SQL Server metadata unless extended properties are used, which do not appear in the provided schema. You'll need a manually curated purpose for each table.

**Summary:**  
- Query `INFORMATION_SCHEMA.TABLES` or `sys.tables` for the list of all tables.  
- Purpose/descriptions must be manually annotated based on table structure/names.  
- No application tables, joins, or custom indexes involved.  
- Table description only available if using extended properties, but not present in your schema.

────────────────────────────────────────────────────────────────────────────────
💻 STAGE 4: SQL GENERATOR
────────────────────────────────────────────────────────────────────────────────

```sql
-- Show all tables in the current database with their descriptions (purpose) if available.
-- Uses INFORMATION_SCHEMA.TABLES to list all user tables.
-- Attempts to fetch table descriptions from extended properties if they exist.
-- Returns: table schema, table name, and table description (purpose).

SELECT 
    t.TABLE_SCHEMA,
    t.TABLE_NAME,
    ISNULL(ep.value, 'No description available') AS Table_Purpose
FROM 
    INFORMATION_SCHEMA.TABLES t
LEFT JOIN 
    sys.tables st
    ON t.TABLE_NAME = st.name AND SCHEMA_NAME(st.schema_id) = t.TABLE_SCHEMA
LEFT JOIN 
    sys.extended_properties ep
    ON ep.major_id = st.object_id
       AND ep.minor_id = 0
       AND ep.name = 'MS_Description'
WHERE 
    t.TABLE_TYPE = 'BASE TABLE'
ORDER BY 
    t.TABLE_SCHEMA, t.TABLE_NAME;
```

-- Key Comments:
-- 1. Uses INFORMATION_SCHEMA.TABLES for portability and current database context.
-- 2. LEFT JOINs to sys.extended_properties to fetch each table's description if defined (common in SQL Server for documentation).
-- 3. Uses ISNULL to provide fallback text where no description exists.
-- 4. Orders result for readability.
-- 5. Query only returns user tables, not views.

-- For best performance, system views are lightweight and indexed for metadata queries.

────────────────────────────────────────────────────────────────────────────────
✅ STAGE 5: SQL VALIDATOR
────────────────────────────────────────────────────────────────────────────────

```sql
SELECT 
    t.TABLE_SCHEMA,
    t.TABLE_NAME,
    ISNULL(ep.value, 'No description available') AS Table_Purpose
FROM 
    INFORMATION_SCHEMA.TABLES t
LEFT JOIN 
    sys.tables st ON t.TABLE_NAME = st.name AND SCHEMA_NAME(st.schema_id) = t.TABLE_SCHEMA
LEFT JOIN 
    sys.extended_properties ep 
        ON ep.major_id = st.object_id 
        AND ep.minor_id = 0
        AND ep.name = 'MS_Description'
WHERE 
    t.TABLE_TYPE = 'BASE TABLE'
ORDER BY 
    t.TABLE_SCHEMA, t.TABLE_NAME;
```
**Notes:**
- SQL Server/Azure SQL does not natively store "purpose" unless an extended property (`MS_Description`) is set.
- You can add descriptions via `sp_addextendedproperty` for documentation.
- This query returns all tables and their descriptions if available.

────────────────────────────────────────────────────────────────────────────────
🔧 STAGE 6: QUERY EXECUTOR
────────────────────────────────────────────────────────────────────────────────


🔧 SQL QUERY EXECUTED:

```sql
SELECT 
    t.TABLE_SCHEMA,
    t.TABLE_NAME,
    ISNULL(ep.value, 'No description available') AS Table_Purpose
FROM 
    INFORMATION_SCHEMA.TABLES t
LEFT JOIN 
    sys.tables st ON t.TABLE_NAME = st.name AND SCHEMA_NAME(st.schema_id) = t.TABLE_SCHEMA
LEFT JOIN 
    sys.extended_properties ep 
        ON ep.major_id = st.object_id 
        AND ep.minor_id = 0
        AND ep.name = 'MS_Description'
WHERE 
    t.TABLE_TYPE = 'BASE TABLE'
ORDER BY 
    t.TABLE_SCHEMA, t.TABLE_NAME;
```


✅ Query executed successfully. Returned 22 row(s):

────────────────────────────────────────────────────────────────────────────────
TABLE_SCHEMA         | TABLE_NAME           | Table_Purpose       
────────────────────────────────────────────────────────────────────────────────
dbo                  | Collateral           | No description avail
dbo                  | Company              | No description avail
dbo                  | CompanyAddress       | No description avail
dbo                  | Covenant             | No description avail
dbo                  | CovenantSchedule     | No description avail
dbo                  | CovenantTestResult   | No description avail
dbo                  | CustomerProfile      | No description avail
dbo                  | db_assistant_migrati | No description avail
dbo                  | dim_company          | No description avail
dbo                  | dim_date             | No description avail
dbo                  | fact_loan_payments   | No description avail
dbo                  | Loan                 | No description avail
dbo                  | LoanDelinquencyFeatu | No description avail
dbo                  | PaymentEvent         | No description avail
dbo                  | PaymentSchedule      | No description avail
dbo                  | RiskMetricHistory    | No description avail
ref                  | Country              | No description avail
ref                  | Currency             | No description avail
ref                  | FXRateDaily          | No description avail
ref                  | ReferenceRate        | No description avail
ref                  | Region               | No description avail
ref                  | Subregion            | No description avail
────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────
📝 STAGE 7: RESULTS FORMATTER
────────────────────────────────────────────────────────────────────────────────

**Business-Friendly Results Summary**

---

### 1. **Summary of Your Request**

You asked for a list of all tables in the database, along with the purpose or description of each table.

---

### 2. **Explanation of the SQL Query**

The SQL query examined the system views to list every table in the database. It attempted to retrieve each table's description ("purpose") if documented via the SQL Server extended properties feature. If no description was available, it noted that.

---

### 3. **Actual Results Returned**

Below are the database tables and (if available) their documented purposes:

| Schema    | Table Name                 | Purpose/Description         |
|-----------|---------------------------|----------------------------|
| dbo       | Collateral                | No description available   |
| dbo       | Company                   | No description available   |
| dbo       | CompanyAddress            | No description available   |
| dbo       | Covenant                  | No description available   |
| dbo       | CovenantSchedule          | No description available   |
| dbo       | CovenantTestResult        | No description available   |
| dbo       | CustomerProfile           | No description available   |
| dbo       | db_assistant_migration    | No description available   |
| dbo       | dim_company               | No description available   |
| dbo       | dim_date                  | No description available   |
| dbo       | fact_loan_payments        | No description available   |
| dbo       | Loan                      | No description available   |
| dbo       | LoanDelinquencyFeature    | No description available   |
| dbo       | PaymentEvent              | No description available   |
| dbo       | PaymentSchedule           | No description available   |
| dbo       | RiskMetricHistory         | No description available   |
| ref       | Country                   | No description available   |
| ref       | Currency                  | No description available   |
| ref       | FXRateDaily               | No description available   |
| ref       | ReferenceRate             | No description available   |
| ref       | Region                    | No description available   |
| ref       | Subregion                 | No description available   |

---

### 4. **Insights & Recommendations**

- **No table descriptions are currently stored** in the database metadata. This means table purposes are not documented within the database itself.
- Table names suggest core areas such as company info, loans, payments, risk metrics, covenants, customer profiles, and reference data (countries, currencies, etc.).
- For improved data governance and onboarding, **consider documenting table purposes** using SQL Server extended properties (`MS_Description`). This enables future queries to return meaningful descriptions for each table.

---

### 5. **Limitations/Caveats**

- The database does not store table purposes or descriptions; the third column defaults to “No description available.”
- Inferring table purposes solely from table names can be ambiguous and may lead to misunderstanding.
- For full compliance and self-documenting data models, add descriptions via `sp_addextendedproperty` as part of your development process.

---

**Next Steps:**  
Consider reviewing the actual usage, business logic, and structure of each table, then adding appropriate descriptions for clarity and compliance.

If you need suggested purposes based on table names, let me know!

================================================================================
✅ NL2SQL Pipeline Complete - All 6 Stages Executed
================================================================================