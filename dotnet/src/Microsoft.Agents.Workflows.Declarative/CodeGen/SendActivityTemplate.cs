// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Microsoft.Agents.Workflows.Declarative.CodeGen
{
    using Microsoft.Agents.Workflows.Declarative.Extensions;
    using Microsoft.Bot.ObjectModel;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    internal partial class SendActivityTemplate : CodeTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\ninternal sealed class ");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Name));
            
            #line default
            #line hidden
            this.Write("Executor(FormulaSession session) : ActionExecutor(id: \"");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Id));
            
            #line default
            #line hidden
            this.Write("\", session)\n{\n    protected override async ValueTask ExecuteAsync(IWorkflowContex" +
                    "t context, CancellationToken cancellationToken)\n    { ");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

if (this.Model.Activity is MessageActivityTemplate messageActivity)
{ 
            
            #line default
            #line hidden
            this.Write("\n        string activityText = \n            await context.FormatTemplateAsync( ");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

    foreach (TemplateLine line in messageActivity.Text)
    {  
            
            #line default
            #line hidden
            this.Write("\n                \"\"\"");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

        foreach (string text in line.ToTemplateString().ByLine())
        { 
            
            #line default
            #line hidden
            this.Write("\n                ");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(text));
            
            #line default
            #line hidden
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

        } 
            
            #line default
            #line hidden
            this.Write("\n                \"\"\"");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

    } 
     
            
            #line default
            #line hidden
            this.Write("\n            );\n        AgentRunResponse response = new([new ChatMessage(ChatRole" +
                    ".Assistant, activityText)]);\n        await context.AddEventAsync(new AgentRunRes" +
                    "ponseEvent(this.Id, response)).ConfigureAwait(false);");
            
            #line 1 "C:\Users\crickman\source\repos\af5\dotnet\src\Microsoft.Agents.Workflows.Declarative\CodeGen\SendActivityTemplate.tt"

} 
            
            #line default
            #line hidden
            this.Write("\n    }\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
