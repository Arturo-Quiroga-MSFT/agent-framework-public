<#@ template language="C#" visibility="internal" #>
<#@ import namespace="Microsoft.Agents.Workflows.Declarative.Extensions" #>
<#@ assembly name="System.Core" #>
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable IDE0005 // Extra using directive is ok.

using System.Threading;
using System.Threading.Tasks;
using Microsoft.Agents.Workflows;
using Microsoft.Agents.Workflows.Declarative;
using Microsoft.Agents.Workflows.Declarative.Extensions;
using Microsoft.Extensions.AI;
using Microsoft.Extensions.AI.Agents;
<# 
if (this.Namespace is not null) 
{#>
namespace <#= this.Namespace #>;
<#} #>
public static class WorkflowProvider
{
    public static Workflow<TInput> CreateWorkflow<TInput>(
        DeclarativeWorkflowOptions options,
        Func<TInput, ChatMessage>? inputTransform = null) 
        where TInput : notnull
    {
        // Define the workflow builder
        DeclarativeWorkflowBuilder<TInput> builder = new(this.Id, options, inputTransform); // %%% ID

        // Create executor instances<#
foreach (string edge in ByLine(this.Instances))
{ #>
        <#= edge #><#
}
 #>

        // Connect executors<#
foreach (string edge in ByLine(this.Edges))
{ #>
        <#= edge #><#
}
 #>

        // Build the workflow
        return builder.Build<TInput>();
    }
}
<#
foreach (string executor in this.Executors)
{ #>
<#= executor.Trim() #>
<#
}
 #>
